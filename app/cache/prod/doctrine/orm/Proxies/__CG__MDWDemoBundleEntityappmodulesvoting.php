<?php

namespace Proxies\__CG__\MDW\DemoBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class appmodulesvoting extends \MDW\DemoBundle\Entity\appmodulesvoting implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'question', 'option1', 'option2', 'option3', 'option4', 'numVotes', 'resultxml', 'sendto', 'tokenid');
        }

        return array('__isInitialized__', 'id', 'question', 'option1', 'option2', 'option3', 'option4', 'numVotes', 'resultxml', 'sendto', 'tokenid');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (appmodulesvoting $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestion($question)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestion', array($question));

        return parent::setQuestion($question);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestion', array());

        return parent::getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setOption1($option1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOption1', array($option1));

        return parent::setOption1($option1);
    }

    /**
     * {@inheritDoc}
     */
    public function getOption1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOption1', array());

        return parent::getOption1();
    }

    /**
     * {@inheritDoc}
     */
    public function setOption2($option2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOption2', array($option2));

        return parent::setOption2($option2);
    }

    /**
     * {@inheritDoc}
     */
    public function getOption2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOption2', array());

        return parent::getOption2();
    }

    /**
     * {@inheritDoc}
     */
    public function setOption3($option3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOption3', array($option3));

        return parent::setOption3($option3);
    }

    /**
     * {@inheritDoc}
     */
    public function getOption3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOption3', array());

        return parent::getOption3();
    }

    /**
     * {@inheritDoc}
     */
    public function setOption4($option4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOption4', array($option4));

        return parent::setOption4($option4);
    }

    /**
     * {@inheritDoc}
     */
    public function getOption4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOption4', array());

        return parent::getOption4();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumVotes($numVotes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumVotes', array($numVotes));

        return parent::setNumVotes($numVotes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumVotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumVotes', array());

        return parent::getNumVotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setResultxml($resultxml)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResultxml', array($resultxml));

        return parent::setResultxml($resultxml);
    }

    /**
     * {@inheritDoc}
     */
    public function getResultxml()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResultxml', array());

        return parent::getResultxml();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendto($sendto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendto', array($sendto));

        return parent::setSendto($sendto);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendto', array());

        return parent::getSendto();
    }

    /**
     * {@inheritDoc}
     */
    public function setTokenid($tokenid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTokenid', array($tokenid));

        return parent::setTokenid($tokenid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTokenid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTokenid', array());

        return parent::getTokenid();
    }

}
